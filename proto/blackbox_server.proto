syntax = "proto3";

import "proto/blackbox_variable.proto";

// Request to start evaluation of a new black-box problem.
message NewTaskRequest {
    enum Algorithm {
        RANDOM_SEARCH = 0;
        SIMULATED_ANNEALING = 1;
    }
    message Metadata {
        repeated BlackboxVariable task_variables = 1;
        Algorithm algorithm = 2;
    }

    message Body {
        bytes chunk = 1;
    }

    oneof stream_oneoff {
        Metadata metadata = 1;
        Body body = 2;
    }
}

// Returns the id of the started job.
message NewTaskResponse {
    string task_id = 1;
}

// Attempts to get the result of the task. May result in an error if results
// are not ready.
message GetTaskResultRequest {
    string task_id = 1;
}

// Returns the value of the function as well as variable values to achieve it.
message GetTaskResultResponse {
    message VariableValue {
        message IntegerVariableValue {
            int64 value = 1;
        }
        message ContiniousVariableValue {
            double value = 1;
        }
        message CategoricalVariableValue {
            string value = 1;
        }
        string name = 1;
        oneof variable_value {
            IntegerVariableValue integer_value = 2;
            ContiniousVariableValue continious_value = 3;
            CategoricalVariableValue categorical_value = 4;
        }
    }
    double result = 1;
    repeated VariableValue variable_values = 2;
}

service Blackbox {
    rpc NewTask (stream NewTaskRequest) returns (NewTaskResponse) {}
    rpc GetTaskResult (GetTaskResultRequest) returns (GetTaskResultResponse) {}
}
